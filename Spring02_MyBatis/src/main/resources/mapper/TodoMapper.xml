<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="todo">
	
	<update id="update" parameterType="com.gura.spring02.todo.dto.TodoDto">
		UPDATE todo
		SET content=#{content}
		WHERE num=#{num}
	</update>
	
	<select id="getData" parameterType="int" resultType="com.gura.spring02.todo.dto.TodoDto">
		SELECT num, content, regdate
		FROM todo
		WHERE num=#{num}
	</select>
	
	<!--
		parameterType 이 숫자나, 문자열이면 값이 하나 이기 떄문에 
		#{ 여기는 아무 문자열이나 넣어도 된다. }
		#{num}
		#{gura}
		#{xxx} 
	-->
	<delete id="delete" parameterType="int">
		DELETE FROM todo
		WHERE num=#{num}
	</delete>
	
	<!--
		parameterType 이 dto 인 경우에
		값을 바인디하는 방법은 #{ dto 의 필드명 } 과 같은 형식으로 바인딩 하면 된다.
		#{ name } 은 dto 의 name 이라는 필드에 있는 값을 해당 위치에 바인딩 하라는 의미이다.
		#{ addr } 은 dto 의 addr 이라는 필드에 있는 값을 해당 위치에 바인딩 하라는 의미이다.
		즉 필드명과 일치 시켜야 동작을 한다
		#{ } 기호는 MyBatis 가 해석하는 특별한 기호이다.
	-->
	<insert id="insert" parameterType="com.gura.spring02.todo.dto.TodoDto">
		INSERT INTO todo
		(num, content, regdate)
		VALUES(todo_seq.NEXTVAL, #{content}, SYSDATE)
	</insert>

	<!-- 
		여기서 resultType 은 select 된 row 를 어떤 객체에 담을지를 결정하는 것이다.
		dto 로 설정했다면 
		SELECT num, name, addr 의 칼럼명과
		dto 의 필드명이 반드시 일치해야 정상동작을 한다.
	-->
	<select id="getList" resultType="com.gura.spring02.todo.dto.TodoDto">
		SELECT num, content, regdate
		From todo
		ORDER BY num ASC
	</select>
</mapper>